apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    name: frontend
spec:
  ports:
    - port: 8080
  selector:
    name: frontend
---
kind: Service
apiVersion: v1
metadata:
  name: nginx-ssl-proxy
  labels:
    name: nginx-ssl-proxy
spec:
  type: LoadBalancer
  ports:
  - name: https
    port: 443
    targetPort: ssl-proxy-https
    protocol: TCP
  - name: http
    port: 80
    targetPort: ssl-proxy-http
    protocol: TCP
  selector:
    name: nginx-ssl-proxy
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: frontend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: frontend
    spec:
      containers:
      - name: rxserver
        image: gcr.io/rx-websockets/rx-server:v2
        command:
        - sh
        - -c
        - websockets-server --host rxserver --port 8080 --stdio
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 8080
---
kind: ReplicationController
apiVersion: v1
metadata:
  name: nginx-ssl-proxy
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: nginx-ssl-proxy
    spec:
      containers:
      - name: nginx-ssl-proxy
        image: gcr.io/cloud-solutions-images/nginx-ssl-proxy
        command:
        - /bin/bash
        - /usr/bin/start.sh
        env:
        - name: TARGET_SERVICE
          value: 'frontend:8080'
        - name: ENABLE_SSL
          value: 'false'
        - name: ENABLE_BASIC_AUTH
          value: 'false'
        ports:
        - name: ssl-proxy-http
          containerPort: 80
